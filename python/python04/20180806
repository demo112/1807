day03 回顾
ASCII编码(0-127)
UNICODE编码(0~127~65535)

r原始字符串
　　r'\a\b\c\d'  8个字符

运算符
　　+ * += *=
  >= <= > < == !=
  in / not in

序列：
　　索引:
    得到一个元素
　　切片操作
　　　　从字符串中拿出一部分字符，重新组成字符串
　　函数：
　　　　len(x)
    max(x)
    min(x)
    ord(c)  返回编码值
    chr(i)  用编码值返回字符
    bin(i)
    oct(i)
    hex(i)
    str(i)

day04笔记
字符串格式化表达式
　　作用：
　　　　生成一定格式的字符串
　　运算符：
　　　　%
  语法格式：
  　　格式字符串　%　参数值
  　　或
  　　格式字符串　% (参数值１，参数值２，　．．．)
　　说明：
　　　　% 左侧为格式字符串
　　　　% 右侧为参数值,当有多个参数值使用括号()　　　　括起来，并用(,)分隔
　　　　格式化字符串中以%开头的为占位符，占位符的位置
　　　　将用参数值替换

格式化字符串中的占位符和类型码
　　%s 字符串，使用　str(x) 将x转换为字符串
　　%r 字符串，使用　repr(x)　将x转换为字符串
　　%c 整数转为单个字符
　　%d 转为十进制整数
　　%o 转为八进制整数
　　%x　十六进制整数(字符a-f小写)
　　%X 十六进制整数(字符A-F大写)
　　%e 指数型浮点数(e小写),如2.9e+10
  %E 指数型浮点数(E大写),如2.9E+10
  %f %F 浮点数(小数形式)
　　%g %G 十进制浮点数或指数浮点自动转换
　　%% 等同于一个%字符

占位符和类型码之间的格式化语法：
　　%[- + 0 宽度.精度]　类型码
　　-:左对齐
　　+:显示正号
　　0:左侧空白位置补零
　　宽度:整个字符串的字符个数
　　精度：保留小数点后多少位(默认6位)

循环语句：
  有两条循环语句
      while语句
      for 　语句
  while 语句：
    作用：
      根据一定条件，重复执行一条语句或多条语句
    语法：
      while　真值表达式：
        语句块１
      else:
        语句块2
    说明：
      １．先判断真值表达式，为T or F
      ２．如果为T，则执行语句块１，再回到第一步
      ３．如果为F，则执行语句块２，然后结束此while的执行
      ４．else部分可省略
    注意事项：
      要控制循环真值表达式内的循环变量值来防止死循环
      通常牙痛真值表达式内的循环变量来控制循环条件
      通常在循环语句块内改变循环变量来控制循环次数和变量走向
    while的嵌套：
      while语句本身是语句，　和其他语句一样，可以嵌套到任何复合语句中
      示意：
        while 真值表达式１：
          while 真值表达式２：
            ...
          else
            ...
        else
          ...
  练习：
    打印１～２０的整数，在一行内
    打印１～２０的整数，每打印５个换一行

    输入一个整数代表正方形宽度，　用变量n绑定，　
    打印指定宽度的正方形
break语句
  作用：
    用于循环语句（while for）中，用来终止当前循环语的执行
  语法：
    break
  说明：
    １．当break语句执行后，此循环语句break之后的语句将不再执行
    ２．break语句通常和ｉｆ语句组合使用
    ３．break语句终止循环时else子句的语句将不会执行
    ４．break语句只能终止当前循环语句的执行，如果有循环嵌套时，不会跳出嵌套的外循环
死循环：
  死循环是指条件一直成立的循环
  死循通常用break语句来终止循环
  死循环的else子句永远不会执行
练习：
  任意输入一些整数，当属输入负数的时候输入结束
  当属入完成后打印输入这些数的和

练习：
  １求下列多项式的和
    １＋１／２＋１／４＋１／４＋．．．．．．＋１／２＊＊１０００
  ２写程序：
    １－　１／３＋　１／５－１／９．．．．．．．．＋　１／（２＊n－１）
    求当n＝１００００时，此公式的和
  ３将上述结果乘以４后打印出来
  ４用ｗｈｉｌｅ语句在线打印三角形，输入一个整数，表示三角形的宽度和高度，打印出响应的直角三角形
  靠左和靠右
  ＊
  ＊＊
  ＊＊＊

  ＊＊＊
  ＊＊
  ＊

  ＊＊＊
  　　＊＊
  　　　　＊
  
  　　　　＊
  　　＊＊
  ＊＊＊